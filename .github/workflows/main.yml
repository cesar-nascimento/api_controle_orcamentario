name: Continuous Integration and Delivery

on: [push]

env:
  IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/backend

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest

  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: web_dev
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml#L71
        ports:
          - 5432/tcp
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
      - name: Run container
        run: |
          docker run \
            -d \
            --name api-controle-orcamentario \
            -e PORT=5003 \
            -e DATABASE_URL=postgres://postgres:postgres@localhost:${{ env.POSTGRES_PORT }}/web_dev \
            -e DATABASE_TEST_URL=postgres://postgres:postgres@localhost:${{ env.POSTGRES_PORT }}/web_test \
            -p 5003:5003 \
            ${{ env.IMAGE }}:latest
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
      - name: Check Running Containers
        run: docker ps -a
      - name: Check Running Containers
        run: docker ps -a
      - name: Pytest
        run: docker exec api-controle-orcamentario python -m pytest .
